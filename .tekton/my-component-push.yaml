apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/brianwcook/trusted-artifacts?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-cel-expression: event == "push" && target_branch
      == "main"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: trusted-artifacts
    appstudio.openshift.io/component: my-component
    pipelines.appstudio.openshift.io/type: build
  name: my-component-on-push
  namespace: brianwcook-tenant
spec:
  params:
  - name: dockerfile
    value: Containerfile
  - name: git-url
    value: '{{source_url}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/brianwcook-tenant/trusted-artifacts/my-component:{{revision}}
  - name: path-context
    value: .
  - name: revision
    value: '{{revision}}'
  pipelineSpec:
    tasks:
    - name: init
      taskRef:
        resolver: bundles
        params:
        - name: name
          value: init
        - name: bundle
          value: quay.io/lucarval/task-init:0.2@sha256:631240e30924c804a019356378f1ff2a091d22d9c196b73d294aec8cb6aec8a3
        - name: kind
          value: task
      params:
      - name: image-url
        value: "$(params.output-image)"
      - name: rebuild
        value: "$(params.rebuild)"
      - name: skip-checks
        value: "$(params.skip-checks)"
    - name: clone-repository
      taskRef:
        resolver: bundles
        params:
        - name: name
          value: git-clone
        - name: bundle
          value: quay.io/lucarval/task-git-clone:0.2@sha256:2195aee8b9acd13eafc285f9bb70770974a0475683f4a25afc591f7194ff72f9
        - name: kind
          value: task
      when:
      - input: "$(tasks.init.results.build)"
        operator: in
        values:
        - 'true'
      runAfter:
      - init
      params:
      - name: url
        value: "$(params.git-url)"
      - name: revision
        value: "$(params.revision)"
      - name: ociStorage
        value: "$(params.output-image)-clone"
      - name: imageExpiresAfter
        value: "$(params.image-expires-after)"
      workspaces:
      - name: basic-auth
        workspace: git-auth
    - name: prefetch-dependencies
      taskRef:
        resolver: bundles
        params:
        - name: name
          value: prefetch-dependencies
        - name: bundle
          value: quay.io/lucarval/task-prefetch-dependencies:0.2@sha256:d9d5791ccf66c7b6c478b956aad88b3dfd202689ee8c06d1bce97dbf84acc9d1
        - name: kind
          value: task
      params:
      - name: input
        value: "$(params.prefetch-input)"
      - name: hermetic
        value: "$(params.hermetic)"
      - name: SOURCE_ARTIFACT
        value: "$(tasks.clone-repository.results.SOURCE_ARTIFACT)"
      - name: OCI_STORAGE
        value: "$(params.output-image)-prefetch"
      - name: IMAGE_EXPIRES_AFTER
        value: "$(params.image-expires-after)"
    - name: mpc-run-test
      params:
        - name: PLATFORM
          value: linux/amd64
      runAfter:
        - prefetch-dependencies
      taskRef:
        resolver: git
        params:
        - name: url
          value: https://github.com/brianwcook/konflux-mpc-test-runner
        - name: revision
          value: main
        - name: pathInRepo
          value: test-runner.yaml
    - name: build-container
      taskRef:
        resolver: bundles
        params:
        - name: name
          value: buildah
        - name: bundle
          value: quay.io/lucarval/task-buildah:0.2@sha256:bb278989ae85465728aa9e005008a81f98456683a81a7ce31c6e5a603a157580
        - name: kind
          value: task
      runAfter:
        - mpc-run-test
      when:
      - input: "$(tasks.init.results.build)"
        operator: in
        values:
        - 'true'
      params:
      - name: IMAGE
        value: "$(params.output-image)"
      - name: DOCKERFILE
        value: "$(params.dockerfile)"
      - name: CONTEXT
        value: "$(params.path-context)"
      - name: HERMETIC
        value: "$(params.hermetic)"
      - name: PREFETCH_INPUT
        value: "$(params.prefetch-input)"
      - name: IMAGE_EXPIRES_AFTER
        value: "$(params.image-expires-after)"
      - name: COMMIT_SHA
        value: "$(tasks.clone-repository.results.commit)"
      - name: SOURCE_ARTIFACT
        value: "$(tasks.prefetch-dependencies.results.SOURCE_ARTIFACT)"
      - name: CACHI2_ARTIFACT
        value: "$(tasks.prefetch-dependencies.results.CACHI2_ARTIFACT)"
    - name: build-source-image
      taskRef:
        resolver: bundles
        params:
        - name: name
          value: source-build
        - name: bundle
          value: quay.io/lucarval/task-source-build:0.2@sha256:75d596ee100641f2d6af809c110e2547d11399c3685b5eb2bf4d4a88c1275077
        - name: kind
          value: task
      when:
      - input: "$(tasks.init.results.build)"
        operator: in
        values:
        - 'true'
      - input: "$(params.build-source-image)"
        operator: in
        values:
        - 'true'
      runAfter:
      - build-container
      params:
      - name: BINARY_IMAGE
        value: "$(params.output-image)"
      - name: BASE_IMAGES
        value: "$(tasks.build-container.results.BASE_IMAGES_DIGESTS)"
      - name: SOURCE_ARTIFACT
        value: "$(tasks.prefetch-dependencies.results.SOURCE_ARTIFACT)"
      - name: CACHI2_ARTIFACT
        value: "$(tasks.prefetch-dependencies.results.CACHI2_ARTIFACT)"
    - name: deprecated-base-image-check
      taskRef:
        resolver: bundles
        params:
        - name: name
          value: deprecated-image-check
        - name: bundle
          value: quay.io/lucarval/task-deprecated-image-check:0.3@sha256:da4262e47d04619ab414b4387b6f6df681c0cb89f0446bec018a010b29cb94bc
        - name: kind
          value: task
      when:
      - input: "$(params.skip-checks)"
        operator: in
        values:
        - 'false'
      runAfter:
      - build-container
      params:
      - name: BASE_IMAGES_DIGESTS
        value: "$(tasks.build-container.results.BASE_IMAGES_DIGESTS)"
    - name: clair-scan
      taskRef:
        resolver: bundles
        params:
        - name: name
          value: clair-scan
        - name: bundle
          value: quay.io/lucarval/task-clair-scan:0.1@sha256:c1e5f6c6aa6b44f3dd465f8172e00f7c04da0053f29a5bbc7c8658d07663be03
        - name: kind
          value: task
      when:
      - input: "$(params.skip-checks)"
        operator: in
        values:
        - 'false'
      runAfter:
      - build-container
      params:
      - name: image-digest
        value: "$(tasks.build-container.results.IMAGE_DIGEST)"
      - name: image-url
        value: "$(tasks.build-container.results.IMAGE_URL)"
    - name: ecosystem-cert-preflight-checks
      taskRef:
        resolver: bundles
        params:
        - name: name
          value: ecosystem-cert-preflight-checks
        - name: bundle
          value: quay.io/lucarval/task-ecosystem-cert-preflight-checks:0.1@sha256:ba67035cd9af547a06ba887ff11c34ad7f37530a9f6864f5772f29b8670d97b9
        - name: kind
          value: task
      when:
      - input: "$(params.skip-checks)"
        operator: in
        values:
        - 'false'
      runAfter:
      - build-container
      params:
      - name: image-url
        value: "$(tasks.build-container.results.IMAGE_URL)"
    - name: sast-snyk-check
      taskRef:
        resolver: bundles
        params:
        - name: name
          value: sast-snyk-check
        - name: bundle
          value: quay.io/lucarval/task-sast-snyk-check:0.2@sha256:546010e62319e565395ca8c008039b9caf0e7cedb921b1b23f0dfa97fc93bd28
        - name: kind
          value: task
      when:
      - input: "$(params.skip-checks)"
        operator: in
        values:
        - 'false'
      runAfter:
      - clone-repository
      params:
      - name: SOURCE_ARTIFACT
        value: "$(tasks.clone-repository.results.SOURCE_ARTIFACT)"
    - name: clamav-scan
      taskRef:
        resolver: bundles
        params:
        - name: name
          value: clamav-scan
        - name: bundle
          value: quay.io/lucarval/task-clamav-scan:0.1@sha256:a56aa471a64175cf0a3d2606c8a48fd0e91d513012bd15889b06494a20d0608d
        - name: kind
          value: task
      when:
      - input: "$(params.skip-checks)"
        operator: in
        values:
        - 'false'
      runAfter:
      - build-container
      params:
      - name: image-digest
        value: "$(tasks.build-container.results.IMAGE_DIGEST)"
      - name: image-url
        value: "$(tasks.build-container.results.IMAGE_URL)"
    - name: sbom-json-check
      taskRef:
        resolver: bundles
        params:
        - name: name
          value: sbom-json-check
        - name: bundle
          value: quay.io/lucarval/task-sbom-json-check:0.1@sha256:ad173b71bc13dc2dd05513743d8b0e0616ad41c955a396a9def604c7653ccbbe
        - name: kind
          value: task
      when:
      - input: "$(params.skip-checks)"
        operator: in
        values:
        - 'false'
      runAfter:
      - build-container
      params:
      - name: IMAGE_URL
        value: "$(tasks.build-container.results.IMAGE_URL)"
      - name: IMAGE_DIGEST
        value: "$(tasks.build-container.results.IMAGE_DIGEST)"
    params:
    - name: git-url
      type: string
      description: Source Repository URL
    - name: revision
      type: string
      description: Revision of the Source Repository
      default: ''
    - name: output-image
      type: string
      description: Fully Qualified Output Image
    - name: path-context
      type: string
      description: Path to the source code of an application's component from where to
        build image.
      default: "."
    - name: dockerfile
      type: string
      description: Path to the Dockerfile inside the context specified by parameter path-context
      default: Dockerfile
    - name: rebuild
      type: string
      description: Force rebuild image
      default: 'false'
    - name: skip-checks
      type: string
      description: Skip checks against built image
      default: 'false'
    - name: hermetic
      type: string
      description: Execute the build with network isolation
      default: 'false'
    - name: prefetch-input
      type: string
      description: Build dependencies to be prefetched by Cachi2
      default: ''
    - name: java
      type: string
      description: Java build
      default: 'false'
    - name: image-expires-after
      description: Image tag expiration time, time values could be something like 1h,
        2d, 3w for hours, days, and weeks, respectively.
      default: ''
    - name: build-source-image
      type: string
      description: Build a source image.
      default: 'false'
    workspaces:
    - name: git-auth
      optional: true
    results:
    - name: IMAGE_URL
      description: ''
      value: "$(tasks.build-container.results.IMAGE_URL)"
    - name: IMAGE_DIGEST
      description: ''
      value: "$(tasks.build-container.results.IMAGE_DIGEST)"
    - name: CHAINS-GIT_URL
      description: ''
      value: "$(tasks.clone-repository.results.url)"
    - name: CHAINS-GIT_COMMIT
      description: ''
      value: "$(tasks.clone-repository.results.commit)"
    - name: JAVA_COMMUNITY_DEPENDENCIES
      description: ''
      value: "$(tasks.build-container.results.JAVA_COMMUNITY_DEPENDENCIES)"
    finally:
    - name: show-sbom
      taskRef:
        resolver: bundles
        params:
        - name: name
          value: show-sbom
        - name: bundle
          value: quay.io/lucarval/task-show-sbom:0.1@sha256:c16ca1dcb25363fe6406311fa143c26c6f960eb4b0445f5975fe8c1c8010d86a
        - name: kind
          value: task
      params:
      - name: IMAGE_URL
        value: "$(tasks.build-container.results.IMAGE_URL)"
    - name: show-summary
      taskRef:
        resolver: bundles
        params:
        - name: name
          value: summary
        - name: bundle
          value: quay.io/lucarval/task-summary:0.1@sha256:7935c2ff51695904b670491f7751febe9efc3c2df389f990949472b40cbf395a
        - name: kind
          value: task
      params:
      - name: pipelinerun-name
        value: "$(context.pipelineRun.name)"
      - name: git-url
        value: "$(tasks.clone-repository.results.url)?rev=$(tasks.clone-repository.results.commit)"
      - name: image-url
        value: "$(params.output-image)"
      - name: build-task-status
        value: "$(tasks.build-container.status)"

